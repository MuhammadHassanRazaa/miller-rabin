name: build and publish distributions
on:
  push:
    tags:
      - v*
jobs:
  build-and-upload-sdist:
    name: Build and upload sdist as artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
      - name: Install build dependencies
        run: |
          pip install -U setuptools
      - name: Build sdist
        run: |
          python setup.py sdist
      - name: Upload sdist as artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  build-and-upload-macos-wheels:
    name: Build and upload Python ${{ matrix.python-version }} macOS wheel as artifact
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8"]
      fail-fast:
        false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: |
          brew install gmp
      - name: Update pip
        run: |
          pip install -U pip
      - name: Build wheel
        env:
          MILLER_RABIN_SUPPRESS_LINK_FLAGS: "1"
          LDFLAGS: /usr/local/opt/gmp/lib/libgmp.a
        run: |
          pip wheel --no-cache-dir --wheel-dir=dist/ .
      - name: Install test dependencies and the built wheel
        run: |
          pip install -U pytest
          pip install dist/*.whl
      - name: Run tests
        run: |
          python -m pytest
      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  build-and-upload-linux-wheels:
    name: Build and upload ${{ matrix.python-abi-tags }}-${{ matrix.platform }} wheel as artifact
    runs-on: ubuntu-latest
    container: quay.io/pypa/${{ matrix.platform }}
    strategy:
      matrix:
        platform:
          - manylinux1_x86_64
          - manylinux2010_x86_64
          - manylinux2014_x86_64
        python-abi-tags:
          - cp36-cp36m
          - cp37-cp37m
          - cp38-cp38
      fail-fast:
        false
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Build and install gmp
        # We build gmp ourselves because system gmp in manylinux* environments are typically outdated.
        run: |
          set -eux
          yum install -y xz
          cd /tmp
          curl -O https://gmplib.org/download/gmp/gmp-6.1.2.tar.xz
          unxz gmp-6.1.2.tar.xz
          tar xf gmp-6.1.2.tar
          cd gmp-6.1.2
          ./configure --prefix=/usr
          make
          make install
      - name: Build and repair wheel
        env:
          PLATFORM: ${{ matrix.platform }}
          PYTHON_ABI_TAGS: ${{ matrix.python-abi-tags }}
        run: |
          set -eux
          PYTHON_BIN=/opt/python/$PYTHON_ABI_TAGS/bin
          $PYTHON_BIN/pip wheel --no-cache-dir --wheel-dir=dist/ .
          auditwheel repair --plat=$PLATFORM --wheel-dir=dist/ dist/*.whl
          rm dist/*-linux_x86_64*.whl  # remove non-manylinux wheel
      - name: Install and test wheel
        env:
          PYTHON_ABI_TAGS: ${{ matrix.python-abi-tags }}
        run: |
          set -eux
          PYTHON_BIN=/opt/python/$PYTHON_ABI_TAGS/bin
          $PYTHON_BIN/pip install -U pytest
          $PYTHON_BIN/pip install dist/*.whl
          $PYTHON_BIN/python -m pytest
      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

  download-and-publish-distributions:
    name: Download distribution artifacts and publish to PyPI
    runs-on: ubuntu-latest
    needs: [build-and-upload-sdist, build-and-upload-macos-wheels, build-and-upload-linux-wheels]
    steps:
      - name: Download distributions
        uses: actions/download-artifact@v1
        with:
          name: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.pypi_api_token }}
